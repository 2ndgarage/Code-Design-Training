/*
Deployment script for Physio_SharedDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Physio_SharedDB"
:setvar DefaultFilePrefix "Physio_SharedDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_PatientFile_Patients]...';


GO
ALTER TABLE [dbo].[PatientFile] DROP CONSTRAINT [FK_PatientFile_Patients];


GO
PRINT N'Dropping [dbo].[FK_PatientHistory_PatientFile]...';


GO
ALTER TABLE [dbo].[PatientHistory] DROP CONSTRAINT [FK_PatientHistory_PatientFile];


GO
PRINT N'Dropping [dbo].[FK_PatientHistory_Diagnostics]...';


GO
ALTER TABLE [dbo].[PatientHistory] DROP CONSTRAINT [FK_PatientHistory_Diagnostics];


GO
PRINT N'Starting rebuilding table [dbo].[PatientFile]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PatientFile] (
    [ID]           INT           IDENTITY (1, 1) NOT NULL,
    [TenantID]     INT           NOT NULL,
    [PatientID]    INT           NOT NULL,
    [CreationDate] DATETIME2 (7) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PatientFile1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PatientFile])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PatientFile] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PatientFile] ([ID], [TenantID], [PatientID], [CreationDate])
        SELECT   [ID], 1,				 
                 [PatientID],
                 [CreationDate]
        FROM     [dbo].[PatientFile]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PatientFile] OFF;
    END

DROP TABLE [dbo].[PatientFile];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PatientFile]', N'PatientFile';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PatientFile1]', N'PK_PatientFile', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PatientHistory]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PatientHistory] (
    [ID]               INT            IDENTITY (1, 1) NOT NULL,
    [PatientFileID]    INT            NOT NULL,
    [DiagnosticID]     INT            NOT NULL,
    [TenantID]         INT            NOT NULL,
    [EntryDescription] NVARCHAR (500) NOT NULL,
    [EntryDate]        DATETIME2 (7)  NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PatientHistory1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PatientHistory])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PatientHistory] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PatientHistory] ([ID], [TenantID], [PatientFileID], [DiagnosticID], [EntryDescription], [EntryDate])
        SELECT   [ID], 1,
                 [PatientFileID],
                 [DiagnosticID],
                 [EntryDescription],
                 [EntryDate]
        FROM     [dbo].[PatientHistory]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PatientHistory] OFF;
    END

DROP TABLE [dbo].[PatientHistory];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PatientHistory]', N'PatientHistory';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PatientHistory1]', N'PK_PatientHistory', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Patients]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Patients] (
    [ID]          INT           IDENTITY (1, 1) NOT NULL,
    [TenantID]    INT          NOT NULL,
    [Name]        NVARCHAR (50) NOT NULL,
    [DateOfBirth] DATETIME2 (7) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Patients1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Patients])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Patients] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Patients] ([ID], [TenantID], [Name], [DateOfBirth])
        SELECT   [ID], 1,
                 [Name],
                 [DateOfBirth]
        FROM     [dbo].[Patients]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Patients] OFF;
    END

DROP TABLE [dbo].[Patients];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Patients]', N'Patients';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Patients1]', N'PK_Patients', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Tenants]...';


GO
CREATE TABLE [dbo].[Tenants] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] NVARCHAR (50) NOT NULL,
    [Key]  NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Tenants] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Tenants].[UK_Tenants_Key]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [UK_Tenants_Key]
    ON [dbo].[Tenants]([Key] ASC);

GO
SET IDENTITY_INSERT [dbo].[Tenants] ON  
INSERT INTO [dbo].[Tenants] ([ID], [Name], [Key])  
    VALUES (1, 'First Tenanat', 'FirstTenant')
SET IDENTITY_INSERT [dbo].[Tenants] OFF

GO
PRINT N'Creating [dbo].[FK_PatientFile_Patients]...';


GO
ALTER TABLE [dbo].[PatientFile] WITH NOCHECK
    ADD CONSTRAINT [FK_PatientFile_Patients] FOREIGN KEY ([PatientID]) REFERENCES [dbo].[Patients] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PatientHistory_PatientFile]...';


GO
ALTER TABLE [dbo].[PatientHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_PatientHistory_PatientFile] FOREIGN KEY ([PatientFileID]) REFERENCES [dbo].[PatientFile] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PatientFile_Tenants]...';


GO
ALTER TABLE [dbo].[PatientFile] WITH NOCHECK
    ADD CONSTRAINT [FK_PatientFile_Tenants] FOREIGN KEY ([TenantID]) REFERENCES [dbo].[Tenants] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PatientHistory_Diagnostics]...';


GO
ALTER TABLE [dbo].[PatientHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_PatientHistory_Diagnostics] FOREIGN KEY ([DiagnosticID]) REFERENCES [dbo].[Diagnostics] ([ID]);


GO
PRINT N'Creating [dbo].[FK_PatientHistory_Tenants]...';


GO
ALTER TABLE [dbo].[PatientHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_PatientHistory_Tenants] FOREIGN KEY ([TenantID]) REFERENCES [dbo].[Tenants] ([ID]);


GO
PRINT N'Creating [dbo].[FK_Patients_Tenants]...';


GO
ALTER TABLE [dbo].[Patients] WITH NOCHECK
    ADD CONSTRAINT [FK_Patients_Tenants] FOREIGN KEY ([TenantID]) REFERENCES [dbo].[Tenants] ([ID]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[PatientFile] WITH CHECK CHECK CONSTRAINT [FK_PatientFile_Patients];

ALTER TABLE [dbo].[PatientHistory] WITH CHECK CHECK CONSTRAINT [FK_PatientHistory_PatientFile];

ALTER TABLE [dbo].[PatientFile] WITH CHECK CHECK CONSTRAINT [FK_PatientFile_Tenants];

ALTER TABLE [dbo].[PatientHistory] WITH CHECK CHECK CONSTRAINT [FK_PatientHistory_Diagnostics];

ALTER TABLE [dbo].[PatientHistory] WITH CHECK CHECK CONSTRAINT [FK_PatientHistory_Tenants];

ALTER TABLE [dbo].[Patients] WITH CHECK CHECK CONSTRAINT [FK_Patients_Tenants];


GO
PRINT N'Update complete.';


GO
